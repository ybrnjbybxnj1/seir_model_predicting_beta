import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import os

def load_single_seed_data(data_dir, seed):
    file_path = os.path.join(data_dir, f'seir_seed_{seed}.csv')
    df = pd.read_csv(file_path)
    df['day'] = np.arange(len(df))  
    return df

def simulate_seir(seed_data, day_to_predict_from):
    S, E, I, R = seed_data.iloc[day_to_predict_from][['S', 'E', 'I', 'R']]
    
    gamma = 0.08  
    sigma = 0.1  
    beta = [1.0356831243032815e-05, 1.0494074126243492e-05, 1.0588871430721467e-05, 1.049673211363752e-05, 1.0519792986050936e-05, 1.0632437012515469e-05, 1.0911529512362611e-05, 1.1282527522099331e-05, 1.1569539556155855e-05, 1.184682897436911e-05, 1.2449282024441883e-05, 1.292919712168104e-05, 1.3391670614731065e-05, 1.3810278191106375e-05, 1.4280188077482395e-05, 1.4845559303240894e-05, 1.5251016797366117e-05, 1.5448474710934392e-05, 1.590492139602739e-05, 1.6285283647602128e-05, 1.6498750709646695e-05, 1.6925630529862116e-05, 1.7139940508672038e-05, 1.750545053923285e-05, 1.8039500902341087e-05, 1.83253599137544e-05, 1.8574159879654107e-05, 1.9002232528957066e-05, 1.8963390664430518e-05, 1.9064883608825942e-05, 1.913256498408245e-05, 1.905372516489285e-05, 1.9096288356544265e-05, 1.9188468743898714e-05, 1.9001817278566796e-05, 1.896966654494155e-05, 1.8939491013568522e-05, 1.892688379913124e-05, 1.8881136238412967e-05, 1.864523448733795e-05, 1.844204507317734e-05, 1.8388225567901764e-05, 1.8267637308698317e-05, 1.824183575688095e-05, 1.830724008833955e-05, 1.8266293006243984e-05, 1.8308088104075086e-05, 1.8208665010540954e-05, 1.8077902673618226e-05, 1.7891210777165018e-05, 1.7636853606855337e-05, 1.7237317710234556e-05, 1.686871997045969e-05, 1.6546498564018273e-05, 1.6367876512422753e-05, 1.6146359668871604e-05, 1.6040222105116046e-05, 1.5801742173267406e-05, 1.565273394269251e-05, 1.55876203874113e-05, 1.5478205449847605e-05, 1.5284588019433456e-05, 1.5077588375088906e-05, 1.4933531316977447e-05, 1.4810557887005422e-05, 1.466510399912397e-05, 1.4479019730992207e-05, 1.4316597046557106e-05, 1.4171951450342925e-05, 1.4068853518075837e-05, 1.3899420577717098e-05, 1.3765545942538808e-05, 1.3663216292428271e-05, 1.3476989727093583e-05, 1.3259125969428947e-05, 1.307547242203459e-05, 1.2959200092335481e-05, 1.2735016227833045e-05, 1.2620568975003984e-05, 1.244968700493292e-05, 1.235193699744644e-05, 1.2260980163300177e-05, 1.2170647902482933e-05, 1.1973028212386874e-05, 1.1923324048406334e-05, 1.1790070204108303e-05, 1.1659749218665404e-05, 1.155113816078655e-05, 1.1457391822593794e-05, 1.131810901495498e-05, 1.1212045836499293e-05, 1.1085735481973804e-05, 1.0987440830344952e-05, 1.0909580332325921e-05, 1.0777996292786059e-05, 1.0688293226526847e-05, 1.059840096424168e-05, 1.0525720377961944e-05, 1.0405906954074438e-05, 1.031044835403072e-05, 1.0233482016736731e-05, 1.0168974513571749e-05, 1.0079182954230128e-05, 9.978409545781667e-06, 9.916248074468492e-06, 9.871187055038462e-06, 9.738938639163457e-06, 9.608367772365542e-06, 9.537142069678154e-06, 9.483352682473324e-06, 9.459487882891815e-06, 9.336597356491356e-06, 9.219895572971064e-06, 9.211243751228442e-06, 9.170266894064851e-06, 9.12720384684069e-06, 9.03905037540474e-06, 8.943533553310151e-06, 8.91570435750502e-06, 8.920808447473008e-06, 8.849710620908715e-06, 8.759297827309166e-06, 8.660659795865804e-06, 8.59536220791913e-06, 8.566756632912451e-06, 8.51987251558585e-06, 8.417898019542077e-06, 8.406538096447675e-06, 8.404642128181051e-06, 8.387786346765771e-06, 8.373768225006593e-06, 8.312065350974568e-06, 8.249047455956626e-06, 8.275841091697383e-06, 8.214244401045754e-06, 8.155675462173803e-06, 8.083958672645136e-06, 8.017038420040398e-06, 8.016783176400989e-06, 7.944062221347483e-06, 7.87164113722915e-06, 7.797790802839984e-06, 7.757326219609625e-06, 7.77555086454163e-06, 7.73128138250691e-06, 7.68164660498404e-06, 7.743600694551138e-06, 7.737086044413237e-06, 7.763168847935355e-06, 7.753322123369074e-06, 7.690903070490188e-06, 7.698898809723883e-06, 7.664395449883182e-06, 7.605957173251517e-06, 7.543632977902243e-06, 7.489740573593702e-06, 7.467987634995426e-06, 7.47614315730562e-06, 7.442353428226695e-06, 7.489986976856152e-06, 7.461072741551738e-06, 7.460080269688561e-06, 7.425433153097555e-06, 7.465359802137633e-06, 7.424843992971774e-06, 7.410904950989275e-06, 7.369649111132982e-06, 7.392017952945774e-06, 7.3802253963114645e-06, 7.393568609807441e-06, 7.310771558074703e-06, 7.2818632820965695e-06, 7.275302299793446e-06, 7.290438637327984e-06, 7.305227862923784e-06, 7.23432380786199e-06, 7.2544455748349965e-06, 7.302252921840879e-06, 7.27758410015348e-06, 7.305299269721969e-06, 7.265747797495422e-06, 7.20304412378668e-06, 7.231595948326456e-06, 7.243395550748422e-06, 7.141955665027532e-06, 7.2223840278634834e-06, 7.189698822566608e-06, 7.158963509548823e-06, 7.1919988237861164e-06, 7.206293632300467e-06, 7.169812536083369e-06, 7.24999326171112e-06, 7.265906456976749e-06, 7.223052914016118e-06, 7.206850994686944e-06, 7.123660043145444e-06, 7.105906276240061e-06, 7.079469791130966e-06, 6.985780493125025e-06, 6.9320854241907244e-06, 6.972385444370651e-06, 6.971494504070334e-06, 7.024688474086737e-06, 6.98915163545931e-06, 7.058516541550147e-06, 7.135359337442763e-06, 7.146209679818008e-06, 7.146011252759513e-06, 7.127732150896361e-06, 7.105926888785239e-06, 7.157275423308535e-06, 7.054061761483481e-06, 6.967419747552922e-06, 6.92990905423049e-06, 6.987262058039536e-06, 6.988341835344585e-06, 7.067541232159896e-06, 7.020796865875517e-06, 6.962123860621812e-06, 6.935233459992553e-06, 6.806319498518452e-06, 6.790082212388184e-06, 6.7537563709981855e-06, 6.656595837903293e-06, 6.7513398090984e-06, 6.93239389496786e-06, 7.024143125180784e-06, 6.969964120506397e-06, 6.843963277979268e-06, 6.680718581390407e-06, 6.649009855335557e-06, 6.533927481113198e-06, 6.4657736303218525e-06, 6.384605033579423e-06, 6.463970400061176e-06, 6.46710271137873e-06, 6.6467586874725845e-06, 6.625418249090467e-06, 6.625226811748904e-06, 6.655058501190525e-06, 6.629295228792911e-06, 6.711789446481777e-06, 6.754339211871947e-06, 6.807445333048354e-06, 6.8099763004598356e-06, 6.863714597526733e-06, 6.648299673192895e-06, 6.722234451162658e-06, 6.881097557680128e-06, 7.031096827608985e-06, 7.0178381299408364e-06]
 
    
    history = {
        'days': [],
        'I_calculated': [],
        'Beta': [beta]
    }
    
    for index, row in seed_data[day_to_predict_from:].iterrows():
        print(index)
        print(row)
        current_day = row['day']

        if current_day < len(beta):
            beta_value = beta[index]
        else:
            beta_value = 0.0
        new_exposed = beta_value * S * I
        new_infectious = sigma * E
        new_recoveries = gamma * I
        
        S = max(S - new_exposed, 0)
        E = max(E + new_exposed - new_infectious, 0)
        I = max(I + new_infectious - new_recoveries, 0)
        R = max(R + new_recoveries, 0)
        
        history['days'].append(row['day'])
        history['I_calculated'].append(I)
        
    return history

def plot_seir_comparison(seed_data, history, start_day, seed):
    fig, ax1 = plt.subplots(figsize=(12, 6))
    ax1.plot(seed_data['day'], seed_data['I'], '--', color='gray', label='Actual incidence')
    ax1.plot(history['days'], history['I_calculated'], '-', color='red', label='Calculated incidence')
    
    ax1.set_xlabel('Days')
    ax1.set_ylabel('Infected population', color='red')
    ax1.tick_params(axis='y', labelcolor='red')
    ax1.axvline(start_day, color='purple', linestyle='--', label='Start day')
    ax1.grid(True, alpha=0.3)
    ax2 = ax1.twinx()
    
    beta = [1.0356831243032815e-05, 1.0494074126243492e-05, 1.0588871430721467e-05, 1.049673211363752e-05, 1.0519792986050936e-05, 1.0632437012515469e-05, 1.0911529512362611e-05, 1.1282527522099331e-05, 1.1569539556155855e-05, 1.184682897436911e-05, 1.2449282024441883e-05, 1.292919712168104e-05, 1.3391670614731065e-05, 1.3810278191106375e-05, 1.4280188077482395e-05, 1.4845559303240894e-05, 1.5251016797366117e-05, 1.5448474710934392e-05, 1.590492139602739e-05, 1.6285283647602128e-05, 1.6498750709646695e-05, 1.6925630529862116e-05, 1.7139940508672038e-05, 1.750545053923285e-05, 1.8039500902341087e-05, 1.83253599137544e-05, 1.8574159879654107e-05, 1.9002232528957066e-05, 1.8963390664430518e-05, 1.9064883608825942e-05, 1.913256498408245e-05, 1.905372516489285e-05, 1.9096288356544265e-05, 1.9188468743898714e-05, 1.9001817278566796e-05, 1.896966654494155e-05, 1.8939491013568522e-05, 1.892688379913124e-05, 1.8881136238412967e-05, 1.864523448733795e-05, 1.844204507317734e-05, 1.8388225567901764e-05, 1.8267637308698317e-05, 1.824183575688095e-05, 1.830724008833955e-05, 1.8266293006243984e-05, 1.8308088104075086e-05, 1.8208665010540954e-05, 1.8077902673618226e-05, 1.7891210777165018e-05, 1.7636853606855337e-05, 1.7237317710234556e-05, 1.686871997045969e-05, 1.6546498564018273e-05, 1.6367876512422753e-05, 1.6146359668871604e-05, 1.6040222105116046e-05, 1.5801742173267406e-05, 1.565273394269251e-05, 1.55876203874113e-05, 1.5478205449847605e-05, 1.5284588019433456e-05, 1.5077588375088906e-05, 1.4933531316977447e-05, 1.4810557887005422e-05, 1.466510399912397e-05, 1.4479019730992207e-05, 1.4316597046557106e-05, 1.4171951450342925e-05, 1.4068853518075837e-05, 1.3899420577717098e-05, 1.3765545942538808e-05, 1.3663216292428271e-05, 1.3476989727093583e-05, 1.3259125969428947e-05, 1.307547242203459e-05, 1.2959200092335481e-05, 1.2735016227833045e-05, 1.2620568975003984e-05, 1.244968700493292e-05, 1.235193699744644e-05, 1.2260980163300177e-05, 1.2170647902482933e-05, 1.1973028212386874e-05, 1.1923324048406334e-05, 1.1790070204108303e-05, 1.1659749218665404e-05, 1.155113816078655e-05, 1.1457391822593794e-05, 1.131810901495498e-05, 1.1212045836499293e-05, 1.1085735481973804e-05, 1.0987440830344952e-05, 1.0909580332325921e-05, 1.0777996292786059e-05, 1.0688293226526847e-05, 1.059840096424168e-05, 1.0525720377961944e-05, 1.0405906954074438e-05, 1.031044835403072e-05, 1.0233482016736731e-05, 1.0168974513571749e-05, 1.0079182954230128e-05, 9.978409545781667e-06, 9.916248074468492e-06, 9.871187055038462e-06, 9.738938639163457e-06, 9.608367772365542e-06, 9.537142069678154e-06, 9.483352682473324e-06, 9.459487882891815e-06, 9.336597356491356e-06, 9.219895572971064e-06, 9.211243751228442e-06, 9.170266894064851e-06, 9.12720384684069e-06, 9.03905037540474e-06, 8.943533553310151e-06, 8.91570435750502e-06, 8.920808447473008e-06, 8.849710620908715e-06, 8.759297827309166e-06, 8.660659795865804e-06, 8.59536220791913e-06, 8.566756632912451e-06, 8.51987251558585e-06, 8.417898019542077e-06, 8.406538096447675e-06, 8.404642128181051e-06, 8.387786346765771e-06, 8.373768225006593e-06, 8.312065350974568e-06, 8.249047455956626e-06, 8.275841091697383e-06, 8.214244401045754e-06, 8.155675462173803e-06, 8.083958672645136e-06, 8.017038420040398e-06, 8.016783176400989e-06, 7.944062221347483e-06, 7.87164113722915e-06, 7.797790802839984e-06, 7.757326219609625e-06, 7.77555086454163e-06, 7.73128138250691e-06, 7.68164660498404e-06, 7.743600694551138e-06, 7.737086044413237e-06, 7.763168847935355e-06, 7.753322123369074e-06, 7.690903070490188e-06, 7.698898809723883e-06, 7.664395449883182e-06, 7.605957173251517e-06, 7.543632977902243e-06, 7.489740573593702e-06, 7.467987634995426e-06, 7.47614315730562e-06, 7.442353428226695e-06, 7.489986976856152e-06, 7.461072741551738e-06, 7.460080269688561e-06, 7.425433153097555e-06, 7.465359802137633e-06, 7.424843992971774e-06, 7.410904950989275e-06, 7.369649111132982e-06, 7.392017952945774e-06, 7.3802253963114645e-06, 7.393568609807441e-06, 7.310771558074703e-06, 7.2818632820965695e-06, 7.275302299793446e-06, 7.290438637327984e-06, 7.305227862923784e-06, 7.23432380786199e-06, 7.2544455748349965e-06, 7.302252921840879e-06, 7.27758410015348e-06, 7.305299269721969e-06, 7.265747797495422e-06, 7.20304412378668e-06, 7.231595948326456e-06, 7.243395550748422e-06, 7.141955665027532e-06, 7.2223840278634834e-06, 7.189698822566608e-06, 7.158963509548823e-06, 7.1919988237861164e-06, 7.206293632300467e-06, 7.169812536083369e-06, 7.24999326171112e-06, 7.265906456976749e-06, 7.223052914016118e-06, 7.206850994686944e-06, 7.123660043145444e-06, 7.105906276240061e-06, 7.079469791130966e-06, 6.985780493125025e-06, 6.9320854241907244e-06, 6.972385444370651e-06, 6.971494504070334e-06, 7.024688474086737e-06, 6.98915163545931e-06, 7.058516541550147e-06, 7.135359337442763e-06, 7.146209679818008e-06, 7.146011252759513e-06, 7.127732150896361e-06, 7.105926888785239e-06, 7.157275423308535e-06, 7.054061761483481e-06, 6.967419747552922e-06, 6.92990905423049e-06, 6.987262058039536e-06, 6.988341835344585e-06, 7.067541232159896e-06, 7.020796865875517e-06, 6.962123860621812e-06, 6.935233459992553e-06, 6.806319498518452e-06, 6.790082212388184e-06, 6.7537563709981855e-06, 6.656595837903293e-06, 6.7513398090984e-06, 6.93239389496786e-06, 7.024143125180784e-06, 6.969964120506397e-06, 6.843963277979268e-06, 6.680718581390407e-06, 6.649009855335557e-06, 6.533927481113198e-06, 6.4657736303218525e-06, 6.384605033579423e-06, 6.463970400061176e-06, 6.46710271137873e-06, 6.6467586874725845e-06, 6.625418249090467e-06, 6.625226811748904e-06, 6.655058501190525e-06, 6.629295228792911e-06, 6.711789446481777e-06, 6.754339211871947e-06, 6.807445333048354e-06, 6.8099763004598356e-06, 6.863714597526733e-06, 6.648299673192895e-06, 6.722234451162658e-06, 6.881097557680128e-06, 7.031096827608985e-06, 7.0178381299408364e-06]
    ax2.plot(seed_data['day'], beta, '-', color='blue', label='Beta average values', alpha=0.5)
    ax2.plot(seed_data['day'], seed_data['Beta'], '-', color='gray', label='Beta values from csv', alpha=0.25)
    
    ax2.set_ylabel('Beta', color='blue')
    ax2.tick_params(axis='y', labelcolor='blue')
    
    lines1, labels1 = ax1.get_legend_handles_labels()
    lines2, labels2 = ax2.get_legend_handles_labels()
    ax1.legend(lines1 + lines2, labels1 + labels2, loc='upper right')
    
    plt.title(f'SEIR model vs Actual data (Seed {seed})')
    plt.tight_layout()
    plt.show()


if __name__ == "__main__":
    DATA_DIR = '../data/'
    SEED = 5
    START_DAY = 50
    
    seed_data = load_single_seed_data(DATA_DIR, SEED)
    history = simulate_seir(seed_data, START_DAY)
    
    plot_seir_comparison(seed_data, history, START_DAY, SEED)

    # -----------
    data = pd.read_csv(f'../data/seir_seed_{SEED}.csv')
    real_beta = data['Beta'].values
    beta = [1.0356831243032815e-05, 1.0494074126243492e-05, 1.0588871430721467e-05, 1.049673211363752e-05, 1.0519792986050936e-05, 1.0632437012515469e-05, 1.0911529512362611e-05, 1.1282527522099331e-05, 1.1569539556155855e-05, 1.184682897436911e-05, 1.2449282024441883e-05, 1.292919712168104e-05, 1.3391670614731065e-05, 1.3810278191106375e-05, 1.4280188077482395e-05, 1.4845559303240894e-05, 1.5251016797366117e-05, 1.5448474710934392e-05, 1.590492139602739e-05, 1.6285283647602128e-05, 1.6498750709646695e-05, 1.6925630529862116e-05, 1.7139940508672038e-05, 1.750545053923285e-05, 1.8039500902341087e-05, 1.83253599137544e-05, 1.8574159879654107e-05, 1.9002232528957066e-05, 1.8963390664430518e-05, 1.9064883608825942e-05, 1.913256498408245e-05, 1.905372516489285e-05, 1.9096288356544265e-05, 1.9188468743898714e-05, 1.9001817278566796e-05, 1.896966654494155e-05, 1.8939491013568522e-05, 1.892688379913124e-05, 1.8881136238412967e-05, 1.864523448733795e-05, 1.844204507317734e-05, 1.8388225567901764e-05, 1.8267637308698317e-05, 1.824183575688095e-05, 1.830724008833955e-05, 1.8266293006243984e-05, 1.8308088104075086e-05, 1.8208665010540954e-05, 1.8077902673618226e-05, 1.7891210777165018e-05, 1.7636853606855337e-05, 1.7237317710234556e-05, 1.686871997045969e-05, 1.6546498564018273e-05, 1.6367876512422753e-05, 1.6146359668871604e-05, 1.6040222105116046e-05, 1.5801742173267406e-05, 1.565273394269251e-05, 1.55876203874113e-05, 1.5478205449847605e-05, 1.5284588019433456e-05, 1.5077588375088906e-05, 1.4933531316977447e-05, 1.4810557887005422e-05, 1.466510399912397e-05, 1.4479019730992207e-05, 1.4316597046557106e-05, 1.4171951450342925e-05, 1.4068853518075837e-05, 1.3899420577717098e-05, 1.3765545942538808e-05, 1.3663216292428271e-05, 1.3476989727093583e-05, 1.3259125969428947e-05, 1.307547242203459e-05, 1.2959200092335481e-05, 1.2735016227833045e-05, 1.2620568975003984e-05, 1.244968700493292e-05, 1.235193699744644e-05, 1.2260980163300177e-05, 1.2170647902482933e-05, 1.1973028212386874e-05, 1.1923324048406334e-05, 1.1790070204108303e-05, 1.1659749218665404e-05, 1.155113816078655e-05, 1.1457391822593794e-05, 1.131810901495498e-05, 1.1212045836499293e-05, 1.1085735481973804e-05, 1.0987440830344952e-05, 1.0909580332325921e-05, 1.0777996292786059e-05, 1.0688293226526847e-05, 1.059840096424168e-05, 1.0525720377961944e-05, 1.0405906954074438e-05, 1.031044835403072e-05, 1.0233482016736731e-05, 1.0168974513571749e-05, 1.0079182954230128e-05, 9.978409545781667e-06, 9.916248074468492e-06, 9.871187055038462e-06, 9.738938639163457e-06, 9.608367772365542e-06, 9.537142069678154e-06, 9.483352682473324e-06, 9.459487882891815e-06, 9.336597356491356e-06, 9.219895572971064e-06, 9.211243751228442e-06, 9.170266894064851e-06, 9.12720384684069e-06, 9.03905037540474e-06, 8.943533553310151e-06, 8.91570435750502e-06, 8.920808447473008e-06, 8.849710620908715e-06, 8.759297827309166e-06, 8.660659795865804e-06, 8.59536220791913e-06, 8.566756632912451e-06, 8.51987251558585e-06, 8.417898019542077e-06, 8.406538096447675e-06, 8.404642128181051e-06, 8.387786346765771e-06, 8.373768225006593e-06, 8.312065350974568e-06, 8.249047455956626e-06, 8.275841091697383e-06, 8.214244401045754e-06, 8.155675462173803e-06, 8.083958672645136e-06, 8.017038420040398e-06, 8.016783176400989e-06, 7.944062221347483e-06, 7.87164113722915e-06, 7.797790802839984e-06, 7.757326219609625e-06, 7.77555086454163e-06, 7.73128138250691e-06, 7.68164660498404e-06, 7.743600694551138e-06, 7.737086044413237e-06, 7.763168847935355e-06, 7.753322123369074e-06, 7.690903070490188e-06, 7.698898809723883e-06, 7.664395449883182e-06, 7.605957173251517e-06, 7.543632977902243e-06, 7.489740573593702e-06, 7.467987634995426e-06, 7.47614315730562e-06, 7.442353428226695e-06, 7.489986976856152e-06, 7.461072741551738e-06, 7.460080269688561e-06, 7.425433153097555e-06, 7.465359802137633e-06, 7.424843992971774e-06, 7.410904950989275e-06, 7.369649111132982e-06, 7.392017952945774e-06, 7.3802253963114645e-06, 7.393568609807441e-06, 7.310771558074703e-06, 7.2818632820965695e-06, 7.275302299793446e-06, 7.290438637327984e-06, 7.305227862923784e-06, 7.23432380786199e-06, 7.2544455748349965e-06, 7.302252921840879e-06, 7.27758410015348e-06, 7.305299269721969e-06, 7.265747797495422e-06, 7.20304412378668e-06, 7.231595948326456e-06, 7.243395550748422e-06, 7.141955665027532e-06, 7.2223840278634834e-06, 7.189698822566608e-06, 7.158963509548823e-06, 7.1919988237861164e-06, 7.206293632300467e-06, 7.169812536083369e-06, 7.24999326171112e-06, 7.265906456976749e-06, 7.223052914016118e-06, 7.206850994686944e-06, 7.123660043145444e-06, 7.105906276240061e-06, 7.079469791130966e-06, 6.985780493125025e-06, 6.9320854241907244e-06, 6.972385444370651e-06, 6.971494504070334e-06, 7.024688474086737e-06, 6.98915163545931e-06, 7.058516541550147e-06, 7.135359337442763e-06, 7.146209679818008e-06, 7.146011252759513e-06, 7.127732150896361e-06, 7.105926888785239e-06, 7.157275423308535e-06, 7.054061761483481e-06, 6.967419747552922e-06, 6.92990905423049e-06, 6.987262058039536e-06, 6.988341835344585e-06, 7.067541232159896e-06, 7.020796865875517e-06, 6.962123860621812e-06, 6.935233459992553e-06, 6.806319498518452e-06, 6.790082212388184e-06, 6.7537563709981855e-06, 6.656595837903293e-06, 6.7513398090984e-06, 6.93239389496786e-06, 7.024143125180784e-06, 6.969964120506397e-06, 6.843963277979268e-06, 6.680718581390407e-06, 6.649009855335557e-06, 6.533927481113198e-06, 6.4657736303218525e-06, 6.384605033579423e-06, 6.463970400061176e-06, 6.46710271137873e-06, 6.6467586874725845e-06, 6.625418249090467e-06, 6.625226811748904e-06, 6.655058501190525e-06, 6.629295228792911e-06, 6.711789446481777e-06, 6.754339211871947e-06, 6.807445333048354e-06, 6.8099763004598356e-06, 6.863714597526733e-06, 6.648299673192895e-06, 6.722234451162658e-06, 6.881097557680128e-06, 7.031096827608985e-06, 7.0178381299408364e-06]
    plt.figure(figsize=(10, 6))
    plt.plot(real_beta, label="Beta from csv", color='blue', linestyle='-')
    plt.plot(beta, label="AVG beta", color='red', linestyle='--')
    plt.title('Beta comparison')
    plt.xlabel('Timestamp')
    plt.ylabel('Beta')
    plt.legend()
    plt.show()
